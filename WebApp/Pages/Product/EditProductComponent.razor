@page "/editproduct/{productId}"

@inject NavigationManager navigationManager
@inject IAddProduct addProduct
@inject IGetProductById getProductById
@inject IEditProduct editProduct
@inject IViewCategories viewCategories

<h3>Edit Product </h3>
<br />
@if (product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="category">Category</label>
            <select id="category" @bind="product.CategoryId" class="form-select">
                <option selected>--- Select Category ---</option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>

        </div>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="product.Quantity" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

        <div class="form-group pt-4">
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
        </div>

    </EditForm>
}

@code {
    [Parameter]
    public string ProductId { get; set; }

    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        categories = viewCategories.Execute();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.ProductId, out int iProductId))
        {
            var cat = getProductById.Execute(iProductId);
            this.product = new Product { ProductId = cat.ProductId, Name = cat.Name, Price = cat.Price, Quantity = cat.Quantity, CategoryId = cat.CategoryId};

        }
    }

    private void OnValidSubmit()
    {
        editProduct.Execute(this.product);
        navigationManager.NavigateTo("/product");
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("/product");
    }

}

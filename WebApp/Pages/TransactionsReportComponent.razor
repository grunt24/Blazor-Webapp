@page "/transaction"

@inject IGetTransactions getTransactions
@inject IJSRuntime JSRntime

<div class="row">
    <div class="col-2">
        <label for="cashier">Cashier Name</label>
        <input type="text" id="cashier" class="form-control" @bind-value = "cashierName"/>
    </div>
    <div class="col-3">
        <label for="startdate">Start Date</label>
        <input type="date" id="startdate" class="form-control" @bind-value="startDate" />
    </div>
    <div class="col-3">
        <label for="enddate">End Date</label>
        <input type="text" id="enddate" class="form-control" @bind-value="endDate" />
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control"@onclick="LoadTransactions">Search</button>
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Generate Report</button>
    </div>
</div>

@if (transactions != null)
{
    <div id="printarea" style="overflow-x: auto;">
        <table class="table text-center">
            <thead>
                <tr>
                    <th>Date time</th>

                    <th>Cashier</th>
                    <th>Product Name</th>
                    <th>Quantity Before</th>
                    @*<th>Before Qty</th>*@
                    <th>Quantity Sold</th>
                    @*<th>Sold Qty</th>*@
                    <th>Quantity Left</th>
                    <th>Price</th>
                    <th class="text-end">Sold Amount</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in transactions)
                {
                    <tr>
                        <td>@item.TimeStamp.ToString("yyyy-MM-dd HH:mm:ss")</td>

                        <td>@item.CashierName</td>
                        <td>@item.ProductName</td>
                        <td>@item.BeforeQty</td>
                        <td>@item.SoldQty</td>
                        <td>@(item.BeforeQty - item.SoldQty)</td>
                        <td>@(string.Format(new System.Globalization.CultureInfo("en-PH"), "{0:C}", item.Price))</td>
                        <td class="text-end">@(string.Format(new System.Globalization.CultureInfo("en-PH"), "{0:C}", item.SoldQty * item.Price))</td>
                    </tr>
                }

            </tbody>
            <tfoot>
                <tr>
                    <td colspan="6">&nbsp;</td>
                    <td><b>Grand Total: </b></td>
                    <td class="fw-bold text-end">@(string.Format(new System.Globalization.CultureInfo("en-PH"), "{0:C}", transactions.Sum(x => x.Price * x.SoldQty)))</td>
                </tr>
            </tfoot>
        </table>
    </div>
}

@code {
    private string cashierName;
    private DateTime startDate;
    private DateTime endDate;
    private IEnumerable<Transaction> transactions;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        startDate = DateTime.Today;
        endDate = DateTime.Today;
    }

    private void LoadTransactions()
    {
        transactions = getTransactions.Execute(cashierName, startDate, endDate);
    }
    private void PrintReport()
    {
        JSRntime.InvokeVoidAsync("print");
    }
}
